name: Checks

on:
  push:
    branches:
      - '**'

    tags-ignore:
      - '**'

  pull_request:
    branches:
      - '**'

    tags-ignore:
      - '**'

jobs:
  # pre-commit Checks
  pre-commit:
    name: Pre Commit Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Run Pre Commit Checks
        uses: pre-commit/action@v3.0.0

  # Run Test Coverage
  test-coverage:
    needs: [ pre-commit ]
    name: Test Coverage (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest

    strategy:
      # Set Python and Django version to test for the stable release of AllianceAuth
      matrix:
        # Don't forget to change the Python version for [upload-coverage] as well
        python-version: [ '3.8', '3.9', '3.10', '3.11' ]

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Install redis
        run: sudo apt-get install -y redis-tools redis-server

      - name: Verify that redis is up
        run: redis-cli ping

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Tox and any other packages
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade tox tox-gh-actions

      - name: Run Tox
        # Run tox using the version of Python in `PATH`
        run: tox -v

      - name: Upload Coverage Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: coverage-python-${{ matrix.python-version }}
          path: coverage.xml
          if-no-files-found: ignore

  # Coverage upload to Codecov and Codacy
#  upload-coverage:
#    needs: [ test-coverage ]
#    name: Upload Coverage
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@main
#
#      - name: Download artifacts
#        uses: actions/download-artifact@v3
#        with:
#          path: artifacts
#
#      - name: Display structure of downloaded files
#        run: ls -Rrtlh
#        working-directory: artifacts
#
#      - name: Upload Coverage to Codecov
#        uses: codecov/codecov-action@v3
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
#          files: artifacts/coverage-python-3.10/coverage.xml # optional
##          flags: unittests # optional
##          name: codecov-umbrella # optional
##          fail_ci_if_error: true # optional (default = false)
#          verbose: true # optional (default = false)
#
#      - name: Upload Coverage to Codacy Coverage Reporter
#        uses: codacy/codacy-coverage-reporter-action@v1
#        with:
#          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
#          coverage-reports: artifacts/coverage-python-3.10/coverage.xml

  # Pypi Build Test
  pypi-build-test:
    needs: [ test-coverage ]
    name: PyPi Build Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@main

      # Minimum supported Python version by AllianceAuth
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install Tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade build
          python -m pip install --upgrade setuptools wheel

      - name: Package Build
        env:
          STACKMANAGER_VERSION: 9999
        run: |
          python -m build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ github.event_name }}-${{ github.sha }}
          path: dist
          if-no-files-found: ignore
